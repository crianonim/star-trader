{"version":3,"sources":["game-logic/player.js","game-logic/trade.js","reducers/preReducer.js","reducers/turnReducer.js","game-logic/index.js","reducers/rootReducer.js","reducers/storeInit.js","game-logic/conditions.js","components/ActionButton.js","components/InventoryList.js","components/Travel.js","components/Main.js","components/ToolBar.js","components/Drawer.js","App.js","index.js"],"names":["getItemCount","inventory","itemName","find","el","calculatePrice","planet","item","prices","state","action","console","log","type","payload","destination","distance","planets","name","place","routes","fuel","player","actionData","valid","amount","money","price","trade","turns","takeTurn","n","turn","i","map","changePlanetFluct","changePricePluct","fluct","Math","max","min","random","isSaved","Boolean","JSON","parse","localStorage","getItem","rootReducer","setItem","stringify","saveGame","initialState","rate","store","getStoreInstance","createStore","reducers","reduce","previous","current","sequenceReducers","preReducer","turnReducer","window","__REDUX_DEVTOOLS_EXTENSION__","TRAVEL","ActionButton","children","variant","color","disabledLabel","dispatch","useDispatch","canAct","conditions","Button","disabled","onClick","withStyles","theme","palette","primary","root","flexGrow","marginTop","flex","menuButton","marginLeft","marginRight","align","display","alignItems","horMar","topMargin","textAlignCenter","textAlign","verSpace","selectedRow","backgroundColor","light","getContrastText","classes","useState","setSelectedRow","useSelector","tt","useTheme","className","Typography","Table","TableHead","TableRow","TableCell","TableBody","key","vertMargin","marginBottom","Tooltip","title","Main","Container","maxWidth","InventoryList","Travel","justifyContent","toggleTheme","handleDrawerOpen","AppBar","position","Toolbar","IconButton","useStyles","makeStyles","padded","padding","props","Drawer","open","onClose","handleDrawerClose","Divider","List","ListItem","button","ListItemIcon","ListItemText","App","themeMode","setThemeMode","drawerOpen","setDrawerOpen","createMuiTheme","ThemeProvider","CssBaseline","ToolBar","ReactDOM","render","document","getElementById"],"mappings":"sTAAaA,EAAa,SAACC,EAAUC,GAAX,OAAsBD,EAAUE,KAAK,SAAAC,GAAE,OAAEA,EAAG,KAAKF,IAAU,ICAxEG,EAAe,SAACC,EAAOC,GAAQ,IAAD,EACfD,EAAOE,OAAOL,KAAK,SAAAC,GAAE,OAAEA,EAAG,KAAKG,IADhB,wBAEvC,OAAa,GAF0B,W,mjBCE5B,eAACE,EAAOC,GACrBC,QAAQC,IAAI,YADoB,IAExBC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QACd,OAAQD,GACN,IAAK,SACHF,QAAQC,IAAI,MAAO,CAAEE,YADvB,IAEUC,EAAgBD,EAAhBC,YACFC,EAAWP,EAAMQ,QACpBd,KAAK,SAAAC,GAAE,OAAIA,EAAGc,OAAST,EAAMU,QAC7BC,OAAOjB,KAAK,SAAAC,GAAE,OAAIA,EAAG,KAAOW,IAAa,GACtCM,EAAOC,EAAoBb,EAAMR,UAAW,QAClD,OACS,EAAP,GAAYQ,EADVO,EAAWK,EACb,CAAmBE,WAAY,CAAEF,OAAML,WAAUQ,OAAO,IAE1D,CAAmBD,WAAY,CAAEF,OAAML,WAAUQ,OAAO,KAC1D,IAAK,QAAL,MAC2Bd,EAAOI,QAAxBW,EADV,EACUA,OAAQlB,EADlB,EACkBA,KACRY,EAAqCV,EAArCU,MAAOF,EAA8BR,EAA9BQ,QAASS,EAAqBjB,EAArBiB,MAAOzB,EAAcQ,EAAdR,UACzBK,EAASW,EAAQd,KAAK,SAAAC,GAAE,OAAIA,EAAGc,OAASC,IACxCQ,EAAQC,EAAqBtB,EAAQC,GAI3C,GAAIkB,EAAS,GACX,GAAIE,EAAQF,EAASC,EAGnB,OAFAf,QAAQC,IAAI,oBAEL,EAAP,GAAWH,EAAX,CAAiBc,WAAW,CAACC,OAAM,UAKrC,IAAKC,EAASxB,EAAUE,KAAK,SAAAC,GAAE,OAAIA,EAAG,KAAOG,IAAM,GAEjD,OADAI,QAAQC,IAAI,4BACL,EAAP,GAAWH,EAAX,CAAiBc,WAAW,CAACC,OAAM,KAGvC,OAAO,EAAP,GAAWf,EAAX,CAAiBc,WAAW,CAACC,OAAM,EAAKK,MAAM,KAChD,QACE,OAAOpB,I,mjBCzCE,eAACA,EAAOC,GACrBC,QAAQC,IAAI,aADoB,IAExBC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QACd,OAAQD,GACN,IAAK,SACDF,QAAQC,IAAI,OAAQ,CAAEE,YADZ,MAEiBL,EAAMc,WAAzBC,EAFE,EAEFA,MAAMR,EAFJ,EAEIA,SACd,OAAKQ,EACEM,EAASd,EAASP,GADNA,EAGvB,IAAK,QAED,OADkBA,EAAMc,WAAhBC,MAEDM,EAASrB,EAAMc,WAAWM,OAAO,EAAEpB,GADvBA,EAGvB,QACE,OAAOA,IAIAqB,EAAS,SAACC,EAAEtB,GAGrB,IAH8B,IACzBuB,EAAcvB,EAAduB,KAAKf,EAASR,EAATQ,QAEDgB,EAAE,EAAEA,EAAEF,EAAEE,IACbtB,QAAQC,IAAI,eAAeoB,GAC3BA,IACAf,EAAQA,EAAQiB,IAAI,SAAA5B,GAAM,YAAOA,EAAP,CAAcE,OAAO2B,EAAkB7B,EAAOE,YAE5E,OAAO,KAAIC,EAAX,CAAiBuB,OAAKf,aAKpBkB,EAAmB,SAAA3B,GAAM,OAAEA,EAAO0B,IAAK,SAAAP,GAAK,MAAE,CAACA,EAAM,GAAGA,EAAM,GAAGS,EAAkBT,EAAM,QAEzFS,EAAiB,SAACC,GAAD,OAASC,KAAKC,KAAK,GAAGD,KAAKE,IAAI,GAAGH,GAAO,GAL9CE,EAKoD,EAJ1DD,KAAKG,SAASF,GAAM,MADf,IAACA,GCpBLG,EAAU,kBAAMC,QAAQC,KAAKC,MAAMC,aAAaC,QAVxC,qB,mjBCGrB,IA0DeC,EA1DK,SAACvC,EAAOC,GACxB,OAAQA,EAAOG,MACX,IAAK,OAED,ODLY,SAAAJ,GACtBqC,aAAaG,QAHM,iBAGgBL,KAAKM,UAAUzC,ICGxC0C,CAAS1C,GACF,KAAIA,GACf,IAAK,OACD,ODFHmC,KAAKC,MAAMC,aAAaC,QAPZ,mBCUb,IAAK,QACD,OAAOK,EACX,IAAK,WACD,OAAO,KACA3C,EADP,CAEIiB,MAAQjB,EAAMiB,MAAQhB,EAAO2C,MAAQ,OAE7C,IAAK,mBAED,OAAO,KACA5C,EADP,CAEIR,UAAU,KAAIQ,EAAMR,UAAX,CAAqBoB,KAAKZ,EAAMR,UAAUoB,KAAK,KACxDb,OAAQE,EAAOF,SAGvB,IAAK,QAAL,MACwBE,EAAOI,QAApBW,EADX,EACWA,OAAOlB,EADlB,EACkBA,KACPY,EAA+BV,EAA/BU,MAAMF,EAAyBR,EAAzBQ,QAAQS,EAAiBjB,EAAjBiB,MAAMzB,EAAWQ,EAAXR,UACrBK,EAAOW,EAAQd,KAAK,SAAAC,GAAE,OAAEA,EAAGc,OAAOC,IAClCQ,EAAMC,EAAqBtB,EAAOC,GAIxC,GAAIkB,EAAO,GACP,GAAIE,EAAMF,EAAOC,EAEb,OADAf,QAAQC,IAAI,oBACLH,OAKX,IAAKgB,EAAOxB,EAAUE,KAAK,SAAAC,GAAE,OAAEA,EAAG,KAAKG,IAAM,GAEzC,OADAI,QAAQC,IAAI,4BACLH,EAIf,OAAO,KAAIA,EAAX,CAAiBiB,MAAMA,EAAMC,EAAMF,EAAOxB,UAAUA,EAAUiC,IAAI,SAAA9B,GAAE,OAAEA,EAAG,KAAKG,EAAK,CAACH,EAAG,GAAGA,EAAG,GAAGqB,GAAQrB,MAE5G,IAAK,SAAL,IACWW,EAAaL,EAAOI,QAApBC,YADX,EAEgCN,EAAMc,WAA3BF,EAFX,EAEWA,KAAKL,EAFhB,EAEgBA,SAASQ,EAFzB,EAEyBA,MAErB,OADAb,QAAQC,IAAI,SAASY,EAAMH,EAAKL,GAC3BQ,EACE,KAAIf,EAAX,CAAiBR,UAAUQ,EAAMR,UAAUiC,IAAI,SAAA9B,GAAE,MAAU,SAARA,EAAG,GAAY,CAAC,OAAOiB,EAAKL,GAAUZ,IAAIe,MAAMJ,IADhFN,EAGvB,QACI,OAAOA,ICpDN2C,EAAa,CACxB1B,MAAO,IACPM,KAAM,EACNb,MAAO,OACPF,QAAS,CACP,CACEC,KAAM,OACNV,OAAQ,CACN,CAAC,OAAQ,EAAG,GACZ,CAAC,OAAQ,GAAI,GACb,CAAC,cAAe,EAAG,GACnB,CAAC,WAAY,EAAG,IAElBY,OAAQ,CAAC,CAAC,QAAS,IAAK,CAAC,OAAQ,MAEnC,CACEF,KAAM,QACNV,OAAQ,CACN,CAAC,OAAQ,EAAG,GACZ,CAAC,OAAQ,EAAG,GACZ,CAAC,cAAe,EAAG,GACnB,CAAC,WAAY,EAAG,IAElBY,OAAQ,CAAC,CAAC,OAAQ,MAEpB,CACEF,KAAM,OACNV,OAAQ,CACN,CAAC,OAAQ,EAAG,GACZ,CAAC,OAAQ,EAAG,GACZ,CAAC,cAAe,EAAG,GACnB,CAAC,WAAY,EAAG,IAElBY,OAAQ,CAAC,CAAC,OAAQ,OAItBnB,UAAW,CACT,CAAC,OAAQ,IACT,CAAC,OAAQ,GACT,CAAC,cAAe,GAChB,CAAC,WAAY,MAMbqD,EAAQ,KAiBGC,EAhBU,WASvB,OARKD,IACHA,EAAQE,YALa,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAe,SAAChD,EAAMC,GAAP,OAAgB+C,EAASC,OAAQ,SAACC,EAASC,GAAV,OAAoBA,EAAQD,EAASjD,IAAQD,IAMhHoD,CAAiBC,EAAWC,EAAYf,GACxCI,EACAY,OAAOC,8BACLD,OAAOC,iCAGNX,G,8EC5DIY,EAAO,SAAC,GAAuB,IAAtBzD,EAAqB,EAArBA,MAAMM,EAAe,EAAfA,YAGxB,QAFeN,EAAMQ,QAAQd,KAAK,SAAAC,GAAE,OAAEA,EAAGc,OAAOT,EAAMU,QAAOC,OAAOjB,KAAK,SAAAC,GAAE,OAAEA,EAAG,KAAKW,IAAa,GACvFO,EAAoBb,EAAMR,UAAU,UCUpCkE,EATM,SAAC,GAAyD,IAAxDC,EAAuD,EAAvDA,SAAS1D,EAA8C,EAA9CA,OAAOI,EAAuC,EAAvCA,QAAQuD,EAA+B,EAA/BA,QAAQC,EAAuB,EAAvBA,MAAMC,EAAiB,EAAjBA,cACnDC,EAASC,cACTC,GAAOC,EAAWjE,IAAQiE,EAAWjE,GAAQI,GACnD,OAAS,kBAAC8D,EAAA,EAAD,CAAQP,QAASA,EAASC,MAAOA,EAAOO,UAAWH,EAAQI,QAAS,WACtEN,EAAS,CAAC3D,KAAKH,EAAOI,cACpByD,IAAkBG,EAAQH,EAAgBH,ICatCW,cAfF,SAAAC,GAAsD,OAA5CrE,QAAQC,IAAI,CAACoE,SAAOA,EAAMC,QAAQC,SAAkB,CACzEC,KAAM,CAAEC,SAAU,EAAEC,UAAU,KAC9BC,KAAM,CAAEA,KAAM,GACdC,WAAY,CAAEC,YAAa,GAAIC,YAAa,IAC5CC,MAAM,CAACC,QAAQ,OAAOC,WAAW,UACjCC,OAAO,CAACL,WAAY,GAAGC,YAAY,GAAGE,QAAQ,OAAOC,WAAW,UAChEE,UAAU,CAACT,UAAU,IACrBU,gBAAgB,CAACC,UAAU,UAC3BC,SAAS,CAACZ,UAAU,QACpBa,YAAY,CAACC,gBAAgBnB,EAAMC,QAAQC,QAAQkB,MAC/C,OAAO,CAAC9B,MAAMU,EAAMC,QAAQoB,gBAAgBrB,EAAMC,QAAQC,QAAQkB,WAKzDrB,CAAmB,YAAe,IAAbuB,EAAY,EAAZA,QAAY,EACTC,mBAAS,MADA,mBACrCL,EADqC,KACzBM,EADyB,OAEXC,YAAY,SAAChG,GAAD,OAASA,IAA/CR,EAFqC,EAErCA,UAAUkB,EAF2B,EAE3BA,MACXb,EAHsC,EAErBW,QACFd,KAAK,SAAAC,GAAE,OAAEA,EAAGc,OAAOC,IAClCuF,EAAGC,cAGT,OADAhG,QAAQC,IAAI,CAAC8F,OAEX,yBAAME,UAAWN,EAAQnB,MACrB,kBAAC0B,EAAA,EAAD,CAAYnB,MAAM,SAASrB,QAAQ,MAAnC,SACF,kBAACyC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,CAAWvB,MAAM,SAAjB,UACA,kBAACuB,EAAA,EAAD,CAAWvB,MAAM,SAAjB,iBAKR,kBAACwB,EAAA,EAAD,KACKjH,EAAUiC,IAAK,WAAmBD,GAAnB,uBAAE/B,EAAF,KAAWuB,EAAX,YACZ,kBAACuF,EAAA,EAAD,CAAWJ,UAAWV,IAAchG,EAASoG,EAAQJ,YAAY,GAChEpB,QAAS,kBAAI0B,EAAetG,IAAWiH,IAAKjH,GACzC,kBAAC+G,EAAA,EAAD,KAAa/G,GACb,kBAAC+G,EAAA,EAAD,CAAWL,UAAU,SAASlB,MAAM,SAAUjE,GAC9C,kBAACwF,EAAA,EAAD,CAAWvB,MAAM,SAAW9D,EAAqBtB,EAAOJ,SAKxE,yBAAK0G,UAAWN,EAAQL,UACT,MAAbC,GAAqB,yBAAKU,UAAWN,EAAQZ,OAC3C,kBAAC,EAAD,CAAcpB,MAAM,UAASD,QAAQ,YAAY3D,OAAO,QAAQI,QAAS,CAACP,KAAK2F,EAAYzE,OAAO,IAAlG,OACA,yBAAKmF,UAAWN,EAAQhB,KAAK,IAAIgB,EAAQP,iBAAzC,aACA,kBAAC,EAAD,CAAczB,MAAM,YAAWD,QAAQ,YAAY3D,OAAO,QAAQI,QAAS,CAACP,KAAK2F,EAAYzE,QAAQ,IAArG,a,SC9BGsD,cAZF,SAAAC,GAAK,MAAK,CACrBG,KAAM,CAAEC,SAAU,EAAEC,UAAU,KAC9BC,KAAM,CAAEA,KAAM,GACdC,WAAY,CAAEC,YAAa,GAAIC,YAAa,IAC5CC,MAAM,CAACC,QAAQ,OAAOC,WAAW,UACjCC,OAAO,CAACL,WAAY,GAAGC,YAAY,GAAGE,QAAQ,OAAOC,WAAW,UAChEE,UAAU,CAACT,UAAU,IACrBU,gBAAgB,CAACC,UAAU,UAC3BoB,WAAW,CAAC/B,UAAU,GAAGgC,aAAa,MAIzBtC,CAAmB,YAAe,IAAbuB,EAAY,EAAZA,QAC1B7F,EAAMgG,YAAY,SAAChG,GAAD,OAASA,IAC1BQ,EAAeR,EAAfQ,QAAQE,EAAOV,EAAPU,MACTb,EAAOW,EAAQd,KAAK,SAAAC,GAAE,OAAEA,EAAGc,OAAOC,IACxC,OACA,yBAAKyF,UAAWN,EAAQc,YAEpB,kBAACP,EAAA,EAAD,CAAYnB,MAAM,SAASrB,QAAQ,MAAnC,UACE,kBAACyC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,CAAWvB,MAAM,UAAjB,YACA,kBAACuB,EAAA,EAAD,CAAWvB,MAAM,SAAQ,kBAAC4B,EAAA,EAAD,CAASC,MAAM,mBAAkB,4CAKlE,kBAACL,EAAA,EAAD,KACC5G,EAAOc,OAAOc,IAAK,mCAAEhB,EAAF,KAAOF,EAAP,YAChB,kBAACgG,EAAA,EAAD,CAAUG,IAAKjG,GACX,kBAAC+F,EAAA,EAAD,KAAY/F,GACZ,kBAAC+F,EAAA,EAAD,CAAWvB,MAAM,UAAU1E,GAC3B,kBAACiG,EAAA,EAAD,CAAWvB,MAAM,SACb,kBAAC,EAAD,CAAcnB,cAAc,kBAAkBF,QAAQ,YAAY3D,OAAO,SAASI,QAAS,CAACL,QAAMM,YAAYG,IAA9G,mB,SClCXsG,EAbF,WACT,OACI,6BACC,kBAACC,EAAA,EAAD,CAAWC,SAAS,MACrB,kBAACC,EAAD,OAEC,kBAACF,EAAA,EAAD,CAAWC,SAAS,MACrB,kBAACE,EAAD,S,uHCMS7C,eARF,SAAAC,GAAK,MAAK,CACrBG,KAAM,CAAEC,SAAU,EAAEC,UAAU,KAC9BC,KAAM,CAAEA,KAAM,GACdC,WAAY,CAAEC,YAAa,GAAIC,YAAa,IAC5CC,MAAM,CAACC,QAAQ,OAAOC,WAAW,SAASiC,eAAe,UACzDhC,OAAO,CAACL,WAAY,GAAGC,YAAY,GAAGE,QAAQ,OAAOC,WAAW,YAGnDb,CAAmB,YAA4C,IAA1CuB,EAAyC,EAAzCA,QAAQwB,EAAiC,EAAjCA,YAAYC,EAAqB,EAArBA,iBAAqB,EAClDtB,YAAY,SAAChG,GAAD,OAASA,IAAvCiB,EADoE,EACpEA,MAAMP,EAD8D,EAC9DA,MAAMa,EADwD,EACxDA,KAEnB,OACI,kBAACgG,EAAA,EAAD,CAAQC,SAAS,SACb,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAY7D,MAAM,UAAUsC,UAAWN,EAAQf,WAAYT,QAASiD,GACpE,kBAAC,IAAD,OAEA,yBAAKnB,UAAWN,EAAQhB,KAAK,IAAIgB,EAAQZ,OACrC,0BAAMkB,UAAWN,EAAQT,QAAQ,kBAAC,KAAD,MAAjC,IAAmD7D,GACnD,0BAAM4E,UAAWN,EAAQT,QAAQ,kBAAC,KAAD,MAAjC,IAAkDnE,EAAlD,KACA,0BAAMkF,UAAWN,EAAQT,QAAQ,kBAAC,IAAD,MAAjC,IAAgD1E,IAEhD,kBAACgH,EAAA,EAAD,CAAYrD,QAASgD,GACjB,kBAAC,KAAD,W,+JCrBlBM,GAAYC,aAAW,SAAArD,GAAK,MAAM,CACpCG,KAAM,CAAEC,SAAU,EAAEC,UAAU,KAC9BC,KAAM,CAAEA,KAAM,GACdgD,OAAO,CAACC,QAAQ,WAGL,YAACC,GACZ,IAAMlC,EAAQ8B,GAAUI,GAClBhE,EAASC,cAEf,OADA9D,QAAQC,IAAI,QAAQ8B,KAEhB,kBAAC+F,GAAA,EAAD,CAASC,KAAMF,EAAME,KAAMC,QAASH,EAAMI,mBACtC,yBAAKhC,UAAWN,EAAQgC,QACxB,kBAACzB,EAAA,EAAD,CAAaxC,QAAQ,MAArB,cACA,kBAACwC,EAAA,EAAD,CAAaxC,QAAQ,WAArB,UAEA,kBAACwE,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUC,QAAM,EAAClE,QAAS,kBAAIN,EAAS,CAAC3D,KAAK,WACzC,kBAACoI,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,mBAEJ,kBAACH,GAAA,EAAD,CAAUlE,UAAWnC,IAAWsG,QAAM,EAAClE,QAAS,WAAK0D,EAAMI,oBAAoBpE,EAAS,CAAC3D,KAAK,WAC1F,kBAACoI,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,mBAEJ,kBAACH,GAAA,EAAD,CAAWC,QAAM,EAAClE,QAAS,kBAAIN,EAAS,CAAC3D,KAAK,YAC1C,kBAACoI,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,qBC9Bd5F,GAAMC,IAsBG4F,OArBf,WAAgB,IAAD,EACkB5C,mBAAS,QAD3B,mBACN6C,EADM,KACIC,EADJ,OAEoB9C,oBAAS,GAF7B,mBAEN+C,EAFM,KAEKC,EAFL,KAGPvE,EAAMwE,aAAe,CAACvE,QAAQ,CAACpE,KAAKuI,KAI1C,OACE,kBAAC,IAAD,CAAU9F,MAAOA,IAChB,kBAACmG,GAAA,EAAD,CAAezE,MAAOA,GACrB,kBAAC0E,GAAA,EAAD,MACA,yBAAK9C,UAAU,OACd,kBAAC+C,GAAD,CAAU5B,iBAPS,kBAAIwB,GAAc,IAOSzB,YARjC,kBAAIuB,EAAyB,SAAZD,EAAmB,QAAQ,WASzD,kBAAC,GAAD,CAAQR,kBAPW,kBAAIW,GAAc,IAOSb,KAAMY,IACpD,kBAAC,EAAD,UCpBPM,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e2ddabc2.chunk.js","sourcesContent":["export const getItemCount=(inventory,itemName)=>inventory.find(el=>el[0]===itemName)[1]","export const calculatePrice=(planet,item)=>{\n    const [name,base,fluct]=planet.prices.find(el=>el[0]===item);\n    return (base*10+fluct);\n}","import * as player from \"../game-logic/player\";\nimport * as trade from \"../game-logic/trade\";\nexport default (state, action) => {\n  console.log(\"FROM PRE\");\n  const { type, payload } = action;\n  switch (type) {\n    case \"TRAVEL\":\n      console.log(\"PRE\", { payload });\n      const { destination } = payload;\n      const distance = state.planets\n        .find(el => el.name === state.place)\n        .routes.find(el => el[0] === destination)[1];\n      const fuel = player.getItemCount(state.inventory, \"fuel\");\n      if (distance > fuel) {\n        return { ...state, actionData: { fuel, distance, valid: false } };\n      }\n      return { ...state, actionData: { fuel, distance, valid: true } };\n    case \"TRADE\":\n      const { amount, item } = action.payload;\n      const { place, planets, money, inventory } = state;\n      const planet = planets.find(el => el.name === place);\n      const price = trade.calculatePrice(planet, item);\n\n      // console.log(amount,state.inventory[item])\n      //buy\n      if (amount > 0) {\n        if (price * amount > money) {\n          console.log(\"Not enough money\");\n\n          return {...state,actionData:{valid:false}};\n        }\n      }\n      //sell\n      else {\n        if (-amount > inventory.find(el => el[0] === item)[1]) {\n          console.log(\"Don't have enough items.\");\n          return {...state,actionData:{valid:false}};\n        }\n      }\n      return {...state,actionData:{valid:true,turns:1}}\n    default:\n      return state;\n  }\n};\n","export default (state, action) => {\n  console.log(\"FROM TURN\");\n  const { type, payload } = action;\n  switch (type) {\n    case \"TRAVEL\":{\n        console.log(\"TURN\", { payload });\n        const { valid,distance } = state.actionData;\n        if (!valid) return state;\n        return takeTurn(distance,state)\n    }\n    case \"TRADE\":{\n        const { valid } = state.actionData;\n        if (!valid) return state;\n        return takeTurn(state.actionData.turns||1,state);\n    }\n    default:\n      return state;\n  }\n};\n\nexport const takeTurn=(n,state)=>{\n    let {turn,planets}=state;\n    \n    for (let i=0;i<n;i++){\n        console.log(\"End of turn \",turn);\n        turn++;\n        planets=planets.map(planet=>({...planet,prices:changePlanetFluct(planet.prices)}))\n    }\n    return {...state,turn,planets}\n}\nexport const rng=(max)=>{\n    return (Math.random()*max)>>0\n}\nconst changePlanetFluct=(prices=>prices.map( price=>[price[0],price[1],changePricePluct( price[2])] ))\n\nconst changePricePluct=(fluct)=>Math.max(-10,Math.min(10,fluct+(2-rng(5))));\n","const saveLocation = \"starTraderSave\";\n\nexport const saveGame = state => {\n  localStorage.setItem(saveLocation, JSON.stringify(state));\n};\n\nexport const loadGame = () => {\n  return JSON.parse(localStorage.getItem(saveLocation));\n};\n\nexport const isSaved = () => Boolean(JSON.parse(localStorage.getItem(saveLocation)));\n","import * as trade from '../game-logic/trade';\nimport {saveGame, loadGame} from '../game-logic/index';\nimport {initialState} from '../reducers/storeInit'\nconst rootReducer = (state, action) => {\n    switch (action.type) {\n        case 'SAVE':\n            saveGame(state);\n            return {...state};\n        case 'LOAD':\n            return loadGame();\n        case 'RESET':\n            return initialState;\n        case 'INTEREST':\n            return {\n                ...state,\n                money: (state.money * action.rate || 1.01)\n            }\n        case 'RANDOMISE_PRICES':\n\n            return {\n                ...state,\n                inventory:{...state.inventory,fuel:state.inventory.fuel-10},\n                prices: action.prices\n            }\n\n        case 'TRADE':\n            const {amount,item}=action.payload;\n            const {place,planets,money,inventory}=state;\n            const planet=planets.find(el=>el.name===place)\n            const price=trade.calculatePrice(planet,item)\n\n            // console.log(amount,state.inventory[item])\n            //buy\n            if (amount>0){\n                if (price*amount>money){\n                    console.log(\"Not enough money\");\n                    return state;\n                }\n            } else\n            //sell\n            {\n                if (-amount>inventory.find(el=>el[0]===item)[1]) {\n                    console.log(\"Don't have enough items.\")\n                    return state;\n                }\n                \n            }\n            return {...state,money:money-price*amount,inventory:inventory.map(el=>el[0]===item?[el[0],el[1]+amount]:el)}\n\n        case 'TRAVEL':\n            const {destination}=action.payload\n            const {fuel,distance,valid}=state.actionData\n            console.log(\"ACTION\",valid,fuel,distance)\n            if (!valid) return state;\n            return {...state,inventory:state.inventory.map(el=>el[0]===\"fuel\"?[\"fuel\",fuel-distance]:el),place:destination}\n       \n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport preReducer from './preReducer';\nimport turnReducer from './turnReducer';\nimport rootReducer from \"./rootReducer\";\n\nexport const initialState={\n  money: 500,\n  turn: 1,\n  place: \"Ereb\",\n  planets: [\n    {\n      name: \"Ereb\",\n      prices: [\n        [\"fuel\", 5, 0],\n        [\"food\", 3, -2],\n        [\"electronics\", 7, 0],\n        [\"minerals\", 6, 0]\n      ],\n      routes: [[\"Dokav\", 10], [\"Inwe\", 20]]\n    },\n    {\n      name: \"Dokav\",\n      prices: [\n        [\"fuel\", 5, 0],\n        [\"food\", 7, 0],\n        [\"electronics\", 4, 0],\n        [\"minerals\", 6, 0]\n      ],\n      routes: [[\"Ereb\", 10]]\n    },\n    {\n      name: \"Inwe\",\n      prices: [\n        [\"fuel\", 5, 0],\n        [\"food\", 6, 0],\n        [\"electronics\", 5, 0],\n        [\"minerals\", 3, 0]\n      ],\n      routes: [[\"Ereb\", 20]]\n    }\n  ],\n\n  inventory: [\n    [\"fuel\", 30],\n    [\"food\", 0],\n    [\"electronics\", 0],\n    [\"minerals\", 20]\n  ]\n}\n\nconst sequenceReducers=( (...reducers)=>(state,action)=>reducers.reduce( (previous,current)=>current(previous,action),state))\n\nlet store = null;\nconst getStoreInstance = () => {\n  if (!store) {\n    store = createStore(\n      sequenceReducers(preReducer,turnReducer,rootReducer),\n      initialState,\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n  }\n  return store;\n};\n\n// console.log(store.getState())\n// store.dispatch({type:\"INTEREST\",rate:1.20})\n// console.log(store.getState())\n\nexport default getStoreInstance;\n","import * as player from './player';\n\nexport const TRAVEL=({state,destination})=>{\n    const distance=state.planets.find(el=>el.name===state.place).routes.find(el=>el[0]===destination)[1]\n    const fuel=player.getItemCount(state.inventory,\"fuel\");\n    if (distance>fuel) return false;\n    return true;\n}","import React from 'react';\nimport Button from '@material-ui/core/Button'\nimport {useDispatch} from 'react-redux';\nimport * as conditions from '../game-logic/conditions';\n\nconst ActionButton = ({children,action,payload,variant,color,disabledLabel})=>{\n    const dispatch=useDispatch();\n    const canAct=conditions[action]?conditions[action](payload):true;\n    return ( <Button variant={variant} color={color} disabled={!canAct} onClick={()=>{\n           dispatch({type:action,payload})\n        }}>{(disabledLabel && !canAct)?disabledLabel : children}</Button>\n    )\n}\n\nexport default ActionButton ","import React, { useState } from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport { AppBar, Toolbar, IconButton, Menu, MenuItem, Drawer, List, ListItem, ListItemText, ListItemIcon, ListSubheader, Tabs, Tab, Table, TableHead, TableCell, TableBody, TableRow } from \"@material-ui/core\";\nimport { withStyles, useTheme } from \"@material-ui/styles\";\nimport * as trade from '../game-logic/trade';\nimport {useSelector} from 'react-redux';\nimport ActionButton from './ActionButton';\n\nconst styles = theme => {console.log({theme},theme.palette.primary); return ({\n    root: { flexGrow: 1,marginTop:100 },\n    flex: { flex: 1 },\n    menuButton: { marginLeft: -12, marginRight: 10 },\n    align:{display:'flex',alignItems:'center'},\n    horMar:{marginLeft: 10,marginRight:10,display:'flex',alignItems:'center'},\n    topMargin:{marginTop:80},\n    textAlignCenter:{textAlign:'center'},\n    verSpace:{marginTop:'1rem'},\n    selectedRow:{backgroundColor:theme.palette.primary.light,\n        '& td':{color:theme.palette.getContrastText(theme.palette.primary.light)}\n    \n    },\n  });\n}\n  export default withStyles(styles)(({classes})=> {\n      const [selectedRow,setSelectedRow]=useState(null);\n      const {inventory,place,planets} =useSelector((state)=>state);\n      const planet=planets.find(el=>el.name===place)\n      const tt=useTheme()\n      \n      console.log({tt})\n      return (\n        <div  className={classes.root}>\n            <Typography align=\"center\" variant=\"h6\">Cargo</Typography>\n          <Table>\n              <TableHead>\n                  <TableRow>\n                      <TableCell>Item</TableCell>\n                      <TableCell align=\"right\" >Amount</TableCell>\n                      <TableCell align=\"right\" >Local Price</TableCell>\n                     \n\n                  </TableRow>\n              </TableHead>\n              <TableBody>\n                  {inventory.map( ([itemName,amount],i)=>(\n                      <TableRow  className={selectedRow===itemName?classes.selectedRow:\"\"}\n                       onClick={()=>setSelectedRow(itemName)} key={itemName}>\n                          <TableCell >{itemName}</TableCell>\n                          <TableCell className=\"amount\" align=\"right\" >{amount}</TableCell>\n                          <TableCell align=\"right\"  >{trade.calculatePrice(planet,itemName)}</TableCell>\n                      </TableRow>\n                  ))}\n              </TableBody>\n          </Table>\n          <div className={classes.verSpace}>\n          {(selectedRow!=null)&&(<div className={classes.align}>\n              <ActionButton color=\"primary\"variant=\"contained\" action=\"TRADE\" payload={{item:selectedRow,amount:1}}>Buy</ActionButton>\n              <div className={classes.flex+\" \"+classes.textAlignCenter}>Amount: 1</div>\n              <ActionButton color=\"secondary\"variant=\"contained\" action=\"TRADE\" payload={{item:selectedRow,amount:-1}}>Sell</ActionButton>\n\n          </div>)}\n    </div>          \n        </div>\n      )\n  });","import React, { useState } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { AppBar, Toolbar, IconButton, Menu, MenuItem, Drawer, List, ListItem, ListItemText, ListItemIcon, ListSubheader, Tabs, Tab, Table, TableHead, TableCell, TableBody, TableRow, Tooltip } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HelpIcon  from '@material-ui/icons/Help';\nimport AddAPhoto from '@material-ui/icons/AddAPhoto'\nimport PublicIcon from '@material-ui/icons/Public'\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\nimport * as trade from '../game-logic/trade';\nimport {useSelector} from 'react-redux';\nimport ActionButton from './ActionButton';\nconst styles = theme => ({\n    root: { flexGrow: 1,marginTop:100 },\n    flex: { flex: 1 },\n    menuButton: { marginLeft: -12, marginRight: 10 },\n    align:{display:'flex',alignItems:'center'},\n    horMar:{marginLeft: 10,marginRight:10,display:'flex',alignItems:'center'},\n    topMargin:{marginTop:80},\n    textAlignCenter:{textAlign:'center'},\n    vertMargin:{marginTop:20,marginBottom:10}\n\n  });\n\n  export default withStyles(styles)(({classes})=> {\n      const state=useSelector((state)=>state);\n      const {planets,place}=state;\n      const planet=planets.find(el=>el.name===place);\n      return (\n      <div className={classes.vertMargin}>\n       \n          <Typography align=\"center\" variant=\"h6\">Travel</Typography>\n            <Table>\n              <TableHead>\n                  <TableRow>\n                      <TableCell>Destination</TableCell>\n                      <TableCell align=\"center\">Distance</TableCell>\n                      <TableCell align=\"right\"><Tooltip title=\"What can you do\"><span>Action</span></Tooltip></TableCell>\n                     \n\n                  </TableRow>\n              </TableHead>\n              <TableBody>\n              {planet.routes.map( ([name,distance])=>(\n                  <TableRow key={name}>\n                      <TableCell>{name}</TableCell>\n                      <TableCell align=\"center\">{distance}</TableCell>\n                      <TableCell align=\"right\">\n                          <ActionButton disabledLabel=\"Not enough fuel\" variant=\"contained\" action=\"TRAVEL\" payload={{state,destination:name}} >Travel</ActionButton>\n                      </TableCell>\n                      </TableRow>\n              ))}\n              </TableBody>\n            </Table>\n       \n      </div>\n              )\n  })","import React from 'react'\nimport {useSelector} from 'react-redux';\nimport InventoryList from './InventoryList';\nimport Travel from './Travel';\nimport { Container } from '@material-ui/core';\nconst Main = ()=>{\n    return (\n        <div>\n         <Container maxWidth=\"sm\">\n        <InventoryList/>\n         </Container>\n         <Container maxWidth=\"sm\">\n        <Travel/>\n        </Container>\n        </div>\n    )\n}\n\nexport default Main","import React from 'react';\nimport { AppBar, Toolbar, IconButton, Menu, MenuItem, Drawer, List, ListItem, ListItemText, ListItemIcon, ListSubheader, Tabs, Tab, Button } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PublicIcon from '@material-ui/icons/Public'\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\nimport BrightnessMediumIcon from '@material-ui/icons/BrightnessMedium';\n\nimport {useSelector} from 'react-redux';\nconst styles = theme => ({\n    root: { flexGrow: 1,marginTop:100 },\n    flex: { flex: 1 },\n    menuButton: { marginLeft: -12, marginRight: 10 },\n    align:{display:'flex',alignItems:'center',justifyContent:'center'},\n    horMar:{marginLeft: 10,marginRight:10,display:'flex',alignItems:'center'},\n  });\n\n  export default withStyles(styles)(({classes,toggleTheme,handleDrawerOpen})=> {\n    const {money,place,turn}=useSelector((state)=>state)\n    \n    return (\n        <AppBar position=\"fixed\">\n            <Toolbar>\n                <IconButton color=\"inherit\" className={classes.menuButton} onClick={handleDrawerOpen}>\n                <MenuIcon />\n                </IconButton>\n                <div className={classes.flex+\" \"+classes.align}>\n                    <span className={classes.horMar}><TimelapseIcon/> {turn}</span> \n                    <span className={classes.horMar}><LocalAtmIcon/> {money} </span> \n                    <span className={classes.horMar}><PublicIcon/> {place}</span>\n                </div>\n                    <IconButton onClick={toggleTheme}>\n                        <BrightnessMediumIcon/>\n                    </IconButton>\n               </Toolbar>\n        </AppBar>\n    )\n  })","import React, { useState } from 'react';\nimport {useDispatch} from 'react-redux';\nimport Typography from \"@material-ui/core/Typography\";\nimport { AppBar, Toolbar, IconButton, Menu, MenuItem, Drawer, List, ListItem, ListItemText, ListItemIcon, ListSubheader, Tabs, Tab, Table, TableHead, TableCell, TableBody, TableRow, Divider } from \"@material-ui/core\";\nimport { withStyles, useTheme, makeStyles } from \"@material-ui/styles\";\nimport * as trade from '../game-logic/trade';\nimport {useSelector} from 'react-redux';\nimport ActionButton from './ActionButton';\nimport {isSaved} from '../game-logic/index'\nimport SaveIcon from '@material-ui/icons/Save';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\nconst useStyles = makeStyles(theme =>  ({\n    root: { flexGrow: 1,marginTop:100 },\n    flex: { flex: 1 },\n    padded:{padding:\"1rem\"},\n}))\n\nexport default (props)=>{\n    const classes=useStyles(props);\n    const dispatch=useDispatch();\n    console.log(\"saved\",isSaved())\n    return (\n        <Drawer  open={props.open} onClose={props.handleDrawerClose}>\n            <div className={classes.padded}>\n            <Typography  variant=\"h6\">StarTrader</Typography>\n            <Typography  variant=\"caption\">v0.1.0</Typography>\n\n            <Divider/>\n            <List>\n                <ListItem button onClick={()=>dispatch({type:\"SAVE\"})}>\n                    <ListItemIcon><SaveIcon/></ListItemIcon>\n                    <ListItemText>Save Game</ListItemText>\n                </ListItem>\n                <ListItem disabled={!isSaved()} button onClick={()=>{props.handleDrawerClose();dispatch({type:\"LOAD\"})}}>\n                    <ListItemIcon><SaveOutlinedIcon/></ListItemIcon>\n                    <ListItemText>Load Game</ListItemText>\n                </ListItem>\n                <ListItem  button onClick={()=>dispatch({type:\"RESET\"})}>\n                    <ListItemIcon><RefreshIcon/></ListItemIcon>\n                    <ListItemText>Restart</ListItemText>\n                </ListItem>\n            </List>\n            </div>\n        </Drawer>\n    )\n}","import React, { useState } from 'react';\nimport {Provider} from 'react-redux';\nimport getStoreInstance from './reducers/storeInit'\n\nimport Main from './components/Main';\nimport ToolBar from './components/ToolBar';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme, Container, CssBaseline, Button } from '@material-ui/core';\n\nimport Drawer from './components/Drawer';\nconst store=getStoreInstance();\nfunction App() {\n  const [themeMode,setThemeMode]=useState('dark');\n  const [drawerOpen,setDrawerOpen]=useState(false);\n  const theme=createMuiTheme({palette:{type:themeMode}})\n  const toggleTheme=()=>setThemeMode(themeMode==='dark'?'light':'dark')\n  const handleDrawerOpen= ()=>setDrawerOpen(true);\n  const handleDrawerClose=()=>setDrawerOpen(false);\n  return (\n    <Provider store={store}>\n     <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className=\"App\">\n       <ToolBar  handleDrawerOpen={handleDrawerOpen} toggleTheme={toggleTheme}/>\n       <Drawer handleDrawerClose={handleDrawerClose} open={drawerOpen}/>\n       <Main></Main>\n     </div>\n     </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}