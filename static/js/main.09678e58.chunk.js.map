{"version":3,"sources":["game-logic/player.js","game-logic/trade.js","reducers/preReducer.js","reducers/turnReducer.js","reducers/rootReducer.js","reducers/storeInit.js","game-logic/conditions.js","components/ActionButton.js","components/InventoryList.js","components/Travel.js","components/Main.js","components/ToolBar.js","App.js","index.js"],"names":["getItemCount","inventory","itemName","find","el","calculatePrice","planet","item","prices","state","action","console","log","type","payload","destination","distance","planets","name","place","routes","fuel","player","actionData","valid","amount","money","price","trade","turns","takeTurn","n","turn","i","map","changePlanetFluct","changePricePluct","fluct","Math","max","min","random","rootReducer","rate","store","getStoreInstance","createStore","reducers","reduce","previous","current","sequenceReducers","preReducer","turnReducer","window","__REDUX_DEVTOOLS_EXTENSION__","TRAVEL","ActionButton","children","variant","color","dispatch","useDispatch","canAct","conditions","Button","disabled","onClick","withStyles","theme","root","flexGrow","marginTop","padding","flex","menuButton","marginLeft","marginRight","align","display","alignItems","horMar","topMargin","textAlignCenter","textAlign","verSpace","selectedRow","backgroundColor","padded","fullWidth","width","classes","useState","setSelectedRow","useSelector","className","Typography","Table","TableHead","TableRow","TableCell","TableBody","key","vertMargin","marginBottom","Main","props","Container","maxWidth","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","InventoryList","Travel","justifyContent","title","AppBar","position","Toolbar","IconButton","App","ToolBar","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09678e58.chunk.js","sourcesContent":["export const getItemCount=(inventory,itemName)=>inventory.find(el=>el[0]===itemName)[1]","export const calculatePrice=(planet,item)=>{\n    const [name,base,fluct]=planet.prices.find(el=>el[0]===item);\n    return (base*10+fluct);\n}","import * as player from \"../game-logic/player\";\nimport * as trade from \"../game-logic/trade\";\nexport default (state, action) => {\n  console.log(\"FROM PRE\");\n  const { type, payload } = action;\n  switch (type) {\n    case \"TRAVEL\":\n      console.log(\"PRE\", { payload });\n      const { destination } = payload;\n      const distance = state.planets\n        .find(el => el.name === state.place)\n        .routes.find(el => el[0] === destination)[1];\n      const fuel = player.getItemCount(state.inventory, \"fuel\");\n      if (distance > fuel) {\n        return { ...state, actionData: { fuel, distance, valid: false } };\n      }\n      return { ...state, actionData: { fuel, distance, valid: true } };\n    case \"TRADE\":\n      const { amount, item } = action.payload;\n      const { place, planets, money, inventory } = state;\n      const planet = planets.find(el => el.name === place);\n      const price = trade.calculatePrice(planet, item);\n\n      // console.log(amount,state.inventory[item])\n      //buy\n      if (amount > 0) {\n        if (price * amount > money) {\n          console.log(\"Not enough money\");\n\n          return {...state,actionData:{valid:false}};\n        }\n      }\n      //sell\n      else {\n        if (-amount > inventory.find(el => el[0] === item)[1]) {\n          console.log(\"Don't have enough items.\");\n          return {...state,actionData:{valid:false}};\n        }\n      }\n      return {...state,actionData:{valid:true,turns:1}}\n    default:\n      return state;\n  }\n};\n","export default (state, action) => {\n  console.log(\"FROM TURN\");\n  const { type, payload } = action;\n  switch (type) {\n    case \"TRAVEL\":{\n        console.log(\"TURN\", { payload });\n        const { valid,distance } = state.actionData;\n        if (!valid) return state;\n        return takeTurn(distance,state)\n    }\n    case \"TRADE\":{\n        const { valid } = state.actionData;\n        if (!valid) return state;\n        return takeTurn(state.actionData.turns||1,state);\n    }\n    default:\n      return state;\n  }\n};\n\nexport const takeTurn=(n,state)=>{\n    let {turn,planets}=state;\n    \n    for (let i=0;i<n;i++){\n        console.log(\"End of turn \",turn);\n        turn++;\n        planets=planets.map(planet=>({...planet,prices:changePlanetFluct(planet.prices)}))\n    }\n    return {...state,turn,planets}\n}\nexport const rng=(max)=>{\n    return (Math.random()*max)>>0\n}\nconst changePlanetFluct=(prices=>prices.map( price=>[price[0],price[1],changePricePluct( price[2])] ))\n\nconst changePricePluct=(fluct)=>Math.max(-10,Math.min(10,fluct+(2-rng(5))));\n","import * as trade from '../game-logic/trade';\n\nconst rootReducer = (state, action) => {\n    switch (action.type) {\n        case 'INTEREST':\n            return {\n                ...state,\n                money: (state.money * action.rate || 1.01)\n            }\n        case 'RANDOMISE_PRICES':\n\n            return {\n                ...state,\n                inventory:{...state.inventory,fuel:state.inventory.fuel-10},\n                prices: action.prices\n            }\n\n        case 'TRADE':\n            const {amount,item}=action.payload;\n            const {place,planets,money,inventory}=state;\n            const planet=planets.find(el=>el.name===place)\n            const price=trade.calculatePrice(planet,item)\n\n            // console.log(amount,state.inventory[item])\n            //buy\n            if (amount>0){\n                if (price*amount>money){\n                    console.log(\"Not enough money\");\n                    return state;\n                }\n            } else\n            //sell\n            {\n                if (-amount>inventory.find(el=>el[0]===item)[1]) {\n                    console.log(\"Don't have enough items.\")\n                    return state;\n                }\n                \n            }\n            return {...state,money:money-price*amount,inventory:inventory.map(el=>el[0]===item?[el[0],el[1]+amount]:el)}\n\n        case 'TRAVEL':\n            const {destination}=action.payload\n            const {fuel,distance,valid}=state.actionData\n            console.log(\"ACTION\",valid,fuel,distance)\n            if (!valid) return state;\n            return {...state,inventory:state.inventory.map(el=>el[0]===\"fuel\"?[\"fuel\",fuel-distance]:el),place:destination}\n       \n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport preReducer from './preReducer';\nimport turnReducer from './turnReducer';\nimport rootReducer from \"./rootReducer\";\n\n\n\nconst sequenceReducers=( (...reducers)=>(state,action)=>reducers.reduce( (previous,current)=>current(previous,action),state))\n\nlet store = null;\nconst getStoreInstance = () => {\n  if (!store) {\n    store = createStore(\n      sequenceReducers(preReducer,turnReducer,rootReducer),\n      {\n        money: 500,\n        turn: 1,\n        place: \"Ereb\",\n        planets: [\n          {\n            name: \"Ereb\",\n            prices: [\n              [\"fuel\", 5, 0],\n              [\"food\", 3, -2],\n              [\"electronics\", 7, 0],\n              [\"minerals\", 6, 0]\n            ],\n            routes: [[\"Dokav\", 10], [\"Inwe\", 20]]\n          },\n          {\n            name: \"Dokav\",\n            prices: [\n              [\"fuel\", 5, 0],\n              [\"food\", 7, 0],\n              [\"electronics\", 4, 0],\n              [\"minerals\", 6, 0]\n            ],\n            routes: [[\"Ereb\", 10]]\n          },\n          {\n            name: \"Inwe\",\n            prices: [\n              [\"fuel\", 5, 0],\n              [\"food\", 6, 0],\n              [\"electronics\", 5, 0],\n              [\"minerals\", 3, 0]\n            ],\n            routes: [[\"Ereb\", 20]]\n          }\n        ],\n\n        inventory: [\n          [\"fuel\", 30],\n          [\"food\", 0],\n          [\"electronics\", 0],\n          [\"minerals\", 20]\n        ]\n      },\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n  }\n  return store;\n};\n\n// console.log(store.getState())\n// store.dispatch({type:\"INTEREST\",rate:1.20})\n// console.log(store.getState())\n\nexport default getStoreInstance;\n","import * as player from './player';\n\nexport const TRAVEL=({state,destination})=>{\n    const distance=state.planets.find(el=>el.name===state.place).routes.find(el=>el[0]===destination)[1]\n    const fuel=player.getItemCount(state.inventory,\"fuel\");\n    if (distance>fuel) return false;\n    return true;\n}","import React from 'react';\nimport Button from '@material-ui/core/Button'\nimport {useDispatch} from 'react-redux';\nimport * as conditions from '../game-logic/conditions';\n\nconst ActionButton = ({children,action,payload,variant,color})=>{\n    const dispatch=useDispatch();\n    const canAct=conditions[action]?conditions[action](payload):true;\n    //  console.log(canAct,action,conditions[action])\n    return ( <Button variant={variant} color={color} disabled={!canAct} onClick={()=>{\n           dispatch({type:action,payload})\n        }}>{children}</Button>\n    )\n}\n\nexport default ActionButton ","import React, { useState } from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport { AppBar, Toolbar, IconButton, Menu, MenuItem, Drawer, List, ListItem, ListItemText, ListItemIcon, ListSubheader, Tabs, Tab, Table, TableHead, TableCell, TableBody, TableRow } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport * as trade from '../game-logic/trade';\nimport {useSelector} from 'react-redux';\nimport ActionButton from './ActionButton';\nconst styles = theme => ({\n    root: { flexGrow: 1,marginTop:100 ,padding:10},\n    flex: { flex: 1 },\n    menuButton: { marginLeft: -12, marginRight: 10 },\n    align:{display:'flex',alignItems:'center'},\n    horMar:{marginLeft: 10,marginRight:10,display:'flex',alignItems:'center'},\n    topMargin:{marginTop:80},\n    textAlignCenter:{textAlign:'center'},\n    verSpace:{marginTop:'1rem'},\n    selectedRow:{backgroundColor:'#3f51b5',color:'white'},\n    padded:{padding:10},\n    fullWidth:{width:'100%'}\n  });\n\n  export default withStyles(styles)(({classes})=> {\n      const [selectedRow,setSelectedRow]=useState(null);\n      const {inventory,place,planets} =useSelector((state)=>state);\n      const planet=planets.find(el=>el.name===place)\n      return (\n        <div className={classes.fullWidth}>\n           <Typography>Your current cargo and local prices if you wish to trade.</Typography>\n          <Table>\n              <TableHead>\n                  <TableRow>\n                      <TableCell>Item</TableCell>\n                      <TableCell align=\"right\" >Amount</TableCell>\n                      <TableCell align=\"right\" >Local Price</TableCell>\n                     \n\n                  </TableRow>\n              </TableHead>\n              <TableBody>\n                  {inventory.map( ([itemName,amount],i)=>(\n                      <TableRow  className={selectedRow===itemName?classes.selectedRow:\"\"}\n                       onClick={()=>setSelectedRow(itemName)} key={itemName}>\n                          <TableCell className={selectedRow===itemName?classes.selectedRow:\"\"} color=\"inherit\">{itemName}</TableCell>\n                          <TableCell align=\"right\" className={selectedRow===itemName?classes.selectedRow:\"\"} >{amount}</TableCell>\n                          <TableCell align=\"right\" className={selectedRow===itemName?classes.selectedRow:\"\"} >{trade.calculatePrice(planet,itemName)}</TableCell>\n                      </TableRow>\n                  ))}\n              </TableBody>\n          </Table>\n          <div className={classes.verSpace}>\n          {(selectedRow!=null)&&(<div className={classes.align}>\n              <ActionButton color=\"primary\"variant=\"contained\" action=\"TRADE\" payload={{item:selectedRow,amount:1}}>Buy</ActionButton>\n              <Typography className={classes.flex+\" \"+classes.textAlignCenter}>Amount: 1</Typography>\n              <ActionButton color=\"secondary\"variant=\"contained\" action=\"TRADE\" payload={{item:selectedRow,amount:-1}}>Sell</ActionButton>\n\n          </div>)}\n    </div>          \n        </div>\n      )\n  });","import React, { useState } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { AppBar, Toolbar, IconButton, Menu, MenuItem, Drawer, List, ListItem, ListItemText, ListItemIcon, ListSubheader, Tabs, Tab, Table, TableHead, TableCell, TableBody, TableRow } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HelpIcon  from '@material-ui/icons/Help';\nimport AddAPhoto from '@material-ui/icons/AddAPhoto'\nimport PublicIcon from '@material-ui/icons/Public'\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\nimport * as trade from '../game-logic/trade';\nimport {useSelector} from 'react-redux';\nimport ActionButton from './ActionButton';\nconst styles = theme => ({\n    root: { flexGrow: 1,marginTop:100 },\n    flex: { flex: 1 },\n    menuButton: { marginLeft: -12, marginRight: 10 },\n    align:{display:'flex',alignItems:'center'},\n    horMar:{marginLeft: 10,marginRight:10,display:'flex',alignItems:'center'},\n    topMargin:{marginTop:80},\n    textAlignCenter:{textAlign:'center'},\n    selectedRow:{backgroundColor:'#5e6ec9',color:'white'},\n    vertMargin:{marginTop:20,marginBottom:10,padding:10},\n    fullWidth:{width:'100%'}\n\n  });\n\n  export default withStyles(styles)(({classes})=> {\n      const state=useSelector((state)=>state);\n      const {planets,place}=state;\n      const planet=planets.find(el=>el.name===place);\n      return (\n      <div className={classes.fullWidth} >\n         <Typography>You can travel from here...</Typography>\n            <Table>\n              <TableHead>\n                  <TableRow>\n                      <TableCell>Destination</TableCell>\n                      <TableCell align=\"center\">Distance</TableCell>\n                      <TableCell align=\"right\">Action</TableCell>\n                     \n\n                  </TableRow>\n              </TableHead>\n              <TableBody>\n              {planet.routes.map( ([name,distance])=>(\n                  <TableRow>\n                      <TableCell>{name}</TableCell>\n                      <TableCell align=\"center\">{distance}</TableCell>\n                      <TableCell align=\"right\"> <ActionButton variant=\"contained\" action=\"TRAVEL\" payload={{state,destination:name}} >Travel</ActionButton></TableCell>\n                      </TableRow>\n              ))}\n              </TableBody>\n            </Table>\n       \n      </div>\n              )\n  })","import React from 'react'\nimport {useSelector} from 'react-redux';\nimport InventoryList from './InventoryList';\nimport Travel from './Travel';\nimport { Container, Paper, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Typography } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nconst Main = (props)=>{\n    return (\n        <div>\n        <Container maxWidth=\"sm\">\n         <ExpansionPanel defaultExpanded >\n             <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                     <Typography variant=\"h6\">Trade</Typography>\n             </ExpansionPanelSummary>\n             <ExpansionPanelDetails>\n               <InventoryList/>\n             </ExpansionPanelDetails>\n         </ExpansionPanel>\n         <ExpansionPanel defaultExpanded  >\n             <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                     <Typography variant=\"h6\">Travel</Typography>\n             </ExpansionPanelSummary>\n             <ExpansionPanelDetails>\n              \n             <Travel />\n             </ExpansionPanelDetails>\n         </ExpansionPanel>\n        \n        </Container>\n        </div>\n    )\n}\n\nexport default Main","import React from 'react';\nimport { AppBar, Toolbar, IconButton, Menu, MenuItem, Drawer, List, ListItem, ListItemText, ListItemIcon, ListSubheader, Tabs, Tab } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PublicIcon from '@material-ui/icons/Public'\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\nimport {useSelector} from 'react-redux';\nconst styles = theme => ({\n    root: { flexGrow: 1,marginTop:100 },\n    flex: { flex: 1 },\n    menuButton: { marginLeft: -12, marginRight: 10 },\n    align:{display:'flex',alignItems:'center',justifyContent:'center'},\n    horMar:{marginLeft: 10,marginRight:10,display:'flex',alignItems:'center'},\n  });\n\n  export default withStyles(styles)(({classes,title})=> {\n    const {money,place,turn}=useSelector((state)=>state)\n    return (\n        <AppBar position=\"fixed\">\n            <Toolbar>\n                <IconButton color=\"inherit\" className={classes.menuButton} onClick={()=>{}}>\n                <MenuIcon />\n                </IconButton>\n                <div className={classes.flex+\" \"+classes.align}>\n                    <span className={classes.horMar}><TimelapseIcon/> {turn}</span> \n                    <span className={classes.horMar}><LocalAtmIcon/> {money} </span> \n                    <span className={classes.horMar}><PublicIcon/> {place}</span>\n                </div>\n               </Toolbar>\n        </AppBar>\n    )\n  })","import React from 'react';\nimport {Provider} from 'react-redux';\nimport getStoreInstance from './reducers/storeInit'\n\nimport Main from './components/Main';\nimport ToolBar from './components/ToolBar';\nconst store=getStoreInstance();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n     <div className=\"App\">\n       <ToolBar title=\"Jasiu\"/>\n              <Main></Main>\n     </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}